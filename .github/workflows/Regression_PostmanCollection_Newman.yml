name: Google Maps API
on: 
   workflow_dispatch:
    inputs:
      Realm:
        description: 'Realm against which tests execute,comma seperated(Ex: by_catman_qa01,by_catman_dv01)'
        type: string
        required: true
        default: 'by_catman_qa01'      
jobs:      
  planograms-api:
    runs-on: ubuntu-latest
    env:
      REPORTS: testArtifact/cms-reports
    strategy:
      matrix:
        realm: ${{ fromJson(github.event.inputs.Realm) }}          
    steps:
      - name: Checkout repository content
        uses: actions/checkout@v3
      - name: Create dir
        run: |          
          mkdir -p ${{ env.REPORTS }}
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - name: Install newman
        continue-on-error: true
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
      - name: Get client credentails
        id: client-credentials
        shell: pwsh
        run: |
          $secretData = '${{ secrets.REALM_MACHINE_CREDENTIALS }}'          
          $secretsJsonObject = $secretData | ConvertFrom-Json
          $realm = "${{ matrix.realm }}"
          $clientId = ""
          $clientSecret = ""
          Write-Host "::set-output name=realm::$realm"
          if ($secretsJsonObject | Get-Member -MemberType Properties | Where-Object { $_.Name -eq $realm }) {
            $clientId = $secretsJsonObject.$realm.clientId
            $clientSecret = $secretsJsonObject.$realm.clientSecret
            echo "Realm: $realm"
            echo "Client ID: $clientId"
            echo "Client Secret: $clientSecret"
          } else {
            echo "Realm '$realm' not found in secrets."
            exit 1
          }
          Write-Host "::set-output name=clientId::$clientId"
          Write-Host "::set-output name=clientSecret::$clientSecret" 
          Write-Host "::set-output name=realm::$realm"                  
      
      - name: Modify environment file with clientId & Secret
        run: |
          sed -i "s/{{AuthClientID_M2M}}/${{ steps.client-credentials.outputs.clientId }}/g" "CKBServicesPostmanTests-Azure/EnvData/Git SQL CatMan APIs with Gateway.postman_environment.json"
          sed -i "s/{{AuthClientSecret}}/${{ steps.client-credentials.outputs.clientSecret }}/g" "CKBServicesPostmanTests-Azure/EnvData/Git SQL CatMan APIs with Gateway.postman_environment.json"
        shell: bash
      
      - name: Run Test -> Planogram - Planogram Accounts
        if: ${{ always() }}  
        continue-on-error: true
        run: newman run --insecure -e "CKBServicesPostmanTests-Azure/EnvData/Git SQL CatMan APIs with Gateway.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export "testArtifact/cms-reports/${{ steps.client-credentials.outputs.realm }}/Planograms/PlanogramsAccounts.html" --reporter-htmlextra-title "Planograms Accounts" -d "CKBServicesPostmanTests-Azure/TestData/Planograms/Planogram Accounts.csv" CKBServicesPostmanTests-Azure/PostmanTests/Collections/Planograms/Planograms.postman_collection.json --folder "Planogram Account Support"
      - name: Output the results
        if: ${{ always() }}
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: API-TestReports
          path: ${{ env.REPORTS }}

  users-api:
    runs-on: ubuntu-latest
    env:
      REPORTS: testArtifact/cms-reports
    strategy:
      matrix:
        realm: ${{ fromJson(github.event.inputs.Realm) }}         
    steps:
      - name: Checkout repository content
        uses: actions/checkout@v3
      - name: Create dir
        run: |          
          mkdir -p ${{ env.REPORTS }}
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - name: Install newman
        continue-on-error: true
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
      - name: Get client credentails
        id: client-credentials
        shell: pwsh
        run: |
          $secretData = '${{ secrets.REALM_MACHINE_CREDENTIALS }}'          
          $secretsJsonObject = $secretData | ConvertFrom-Json
          $realm = "${{ matrix.realm }}"
          $clientId = ""
          $clientSecret = ""
          Write-Host "::set-output name=realm::$realm"
          if ($secretsJsonObject | Get-Member -MemberType Properties | Where-Object { $_.Name -eq $realm }) {
            $clientId = $secretsJsonObject.$realm.clientId
            $clientSecret = $secretsJsonObject.$realm.clientSecret
            echo "Realm: $realm"
            echo "Client ID: $clientId"
            echo "Client Secret: $clientSecret"
          } else {
            echo "Realm '$realm' not found in secrets."
            exit 1
          }
          Write-Host "::set-output name=clientId::$clientId"
          Write-Host "::set-output name=clientSecret::$clientSecret"
          Write-Host "::set-output name=realm::$realm"
      - name: Modify environment file with clientId & Secret
        run: |
            sed -i "s/{{AuthClientID_M2M}}/${{ steps.client-credentials.outputs.clientId }}/g" "CKBServicesPostmanTests-Azure/EnvData/Git SQL CatMan APIs with Gateway.postman_environment.json"
            sed -i "s/{{AuthClientSecret}}/${{ steps.client-credentials.outputs.clientSecret }}/g" "CKBServicesPostmanTests-Azure/EnvData/Git SQL CatMan APIs with Gateway.postman_environment.json"
        shell: bash

      - name: Run Test -> Users - Add Users
        if: ${{ always() }}  
        continue-on-error: true
        run: newman run --insecure -e "CKBServicesPostmanTests-Azure/EnvData/Git SQL CatMan APIs with Gateway.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export "testArtifact/cms-reports/${{ steps.client-credentials.outputs.realm }}/Users/Users_Post_Add.html" --reporter-htmlextra-title "Users - Add Users" -d CKBServicesPostmanTests-Azure/TestData/Users/Users_Post_Add.csv CKBServicesPostmanTests-Azure/PostmanTests/Collections/Users/Users.postman_collection.json --folder "Users_Post_Add"
      - name: Output the results
        if: ${{ always() }}
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: API-TestReports
          path: testArtifact/cms-reports
